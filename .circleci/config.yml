    version: 2.1
    executors:
        docker-publisher:
          working_directory: ~/cci-hs-app # directory where steps will run
          environment:
            IMAGE_NAME: soeik/hs-app
          docker:
            - image: circleci/buildpack-deps:stretch
    jobs:
      build:
        working_directory: ~/cci-hs-app # directory where steps will run
        docker:
          - image: clojure:tools-deps
        environment:
          JVM_OPTS: -Xmx3200m # limit the maximum heap size to prevent out of memory errors
        steps:
          - checkout
          - restore_cache:
              key: hs-app-{{ checksum "deps.edn" }}
          - save_cache:
              paths:
                - ~/.m2
              key: hs-app-{{ checksum "deps.edn" }}
          - run:
              name: Run tests
              command: clojure -X:test
          - run: apt update && apt install --assume-yes curl nodejs
          - run:
              name: Install yarn
              command: |
                        curl -o- -L https://yarnpkg.com/install.sh | bash
                        echo 'export PATH="$HOME/.yarn/bin:$HOME/.config/yarn/global/node_modules/.bin:$PATH"' >> $BASH_ENV
          - run:
              name: Install dependencies
              command: yarn install
          - run:
              name: Build cljs
              command: yarn release app
          - run:
              name: Build app
              command: clojure -T:build uber
          - persist_to_workspace:
              root: ~/
              paths:
                - cci-hs-app
      run-e2e-tests:
        working_directory: ~/cci-hs-app # directory where steps will run
        docker:      
          - image: docker/compose
        steps:
          - attach_workspace:
              at: ~/
          - run:
              name: Start app
              command: docker-compose up
      build-docker:
        executor: docker-publisher
        steps:
          - checkout
          - attach_workspace:
              at: .
          - setup_remote_docker
          - run:
              name: Build latest Docker image
              command: docker build . -t $IMAGE_NAME:latest
          - run:
              name: Build tagged Docker image
              command: docker build . -t $IMAGE_NAME:${CIRCLE_TAG}
          - run:
              name: Archive Docker images
              command: docker save -o image.tar $IMAGE_NAME
          - persist_to_workspace:
              root: ~/cci-hs-app
              paths:
                - ./image.tar
      publish-docker:
        executor: docker-publisher
        steps:
          - attach_workspace:
              at: .
          - setup_remote_docker
          - run:
              name: Load archived Docker image
              command: docker load -i image.tar
          - run:
              name: Publish Docker Image to Docker Hub
              command: |
                echo "${DOCKERHUB_PASS}" | docker login -u "${DOCKERHUB_USERNAME}" --password-stdin
                docker push $IMAGE_NAME:latest
                docker push $IMAGE_NAME:${CIRCLE_TAG}
    workflows:
      version: 2.1
      main:
        jobs:
          - build
          - run-e2e-tests:
              requires: 
                - build
      build_and_deploy:
        jobs:
          - build:
              filters:
                branches:
                  ignore: /.*/
                tags:
                  only: /^\d+\.\d+\.\d+$/
          - build-docker:
              requires:
                - build
              filters:
                branches:
                  ignore: /.*/
                tags:
                  only: /^\d+\.\d+\.\d+$/
          - publish-docker:
              requires:
                - build-docker
              filters:
                branches:
                  ignore: /.*/
                tags:
                  only: /^\d+\.\d+\.\d+$/
